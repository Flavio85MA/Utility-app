name: Import FFmpeg core (PR)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  import-core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pick names
        id: prep
        run: echo "BRANCH=ffmpeg-core-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Create branch and upload files via API
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const base = context.ref.replace('refs/heads/',''); // es. "main"
            const head = "${{ steps.prep.outputs.BRANCH }}";

            // 1) crea branch dal base
            const baseRef = await github.rest.git.getRef({owner, repo, ref: `heads/${base}`});
            await github.rest.git.createRef({owner, repo, ref: `refs/heads/${head}`, sha: baseRef.data.object.sha});

            async function addFile(url, path) {
              const res = await fetch(url);
              if (!res.ok) throw new Error(`fetch ${url} -> ${res.status}`);
              const buf = Buffer.from(await res.arrayBuffer());
              const content = buf.toString('base64');
              await github.rest.repos.createOrUpdateFileContents({
                owner, repo, path,
                message: `Add ${path}`,
                content,
                branch: head
              });
            }

            // 2) scarica dai CDN e carica nel repo (same-origin)
            await addFile('https://cdn.jsdelivr.net/npm/@ffmpeg/core@0.12.10/dist/umd/ffmpeg-core.js', 'vendor/ffmpeg/umd/ffmpeg-core.js');
            await addFile('https://cdn.jsdelivr.net/npm/@ffmpeg/core@0.12.10/dist/umd/ffmpeg-core.wasm', 'vendor/ffmpeg/umd/ffmpeg-core.wasm');
            await addFile('https://cdn.jsdelivr.net/npm/@ffmpeg/core@0.12.10/dist/umd/ffmpeg-core.worker.js', 'vendor/ffmpeg/umd/ffmpeg-core.worker.js');
            await addFile('https://cdn.jsdelivr.net/npm/@ffmpeg/ffmpeg@0.12.15/dist/esm/worker.js', 'vendor/ffmpeg/esm/worker.js');

            // 3) apri PR
            const { data: pr } = await github.rest.pulls.create({
              owner, repo,
              title: 'Add FFmpeg core (UMD) + worker (same-origin)',
              head, base,
              body: 'Adds vendor/ffmpeg/* assets for same-origin loading on GitHub Pages.'
            });
            core.setOutput('pr_url', pr.html_url);

      - name: Echo PR URL
        run: echo "PR opened. Check the 'Create branch and upload files via API' step logs for the link."
